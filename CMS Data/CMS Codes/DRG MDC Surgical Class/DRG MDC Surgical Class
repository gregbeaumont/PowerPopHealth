let
    Source = AzureStorage.DataLake("https://YOUR_DATA_LAKE.dfs.core.windows.net/powerpophealth/"),
    #"https://YOUR_DATA_LAKE dfs core windows net/powerpophealth/DRG38_1/_appendix_A txt" = Source{[#"Folder Path"="https://YOUR_DATA_LAKE.dfs.core.windows.net/powerpophealth/DRG38_1/",Name="appendix_A.txt"]}[Content],
    #"Imported CSV" = Csv.Document(#"https://YOUR_DATA_LAKE dfs core windows net/powerpophealth/DRG38_1/_appendix_A txt",[Delimiter="|", Columns=1, Encoding=1252, QuoteStyle=QuoteStyle.None]),
    #"Removed Top Rows" = Table.Skip(#"Imported CSV",10),
    #"Split Column by Delimiter" = Table.SplitColumn(#"Removed Top Rows", "Column1", Splitter.SplitTextByEachDelimiter({" "}, QuoteStyle.Csv, false), {"Column1.1", "Column1.2"}),
    #"Added Custom" = Table.AddColumn(#"Split Column by Delimiter", "MDC", each if Text.Start([Column1.2],1) = " " then "00" else Text.Start([Column1.2],2)),
    #"Replaced Value" = Table.ReplaceValue(#"Added Custom","00","",Replacer.ReplaceText,{"MDC"}),
    #"Replaced Value1" = Table.ReplaceValue(#"Replaced Value","MD","MDC",Replacer.ReplaceText,{"MDC"}),
    #"Added Custom1" = Table.AddColumn(#"Replaced Value1", "MS", each if [MDC] = null then Text.Start([Column1.2],3) else if [MDC] = "MDC" then "MS" else Text.Start([Column1.2],5)),
    #"Split Column by Positions" = Table.SplitColumn(#"Added Custom1", "MS", Splitter.SplitTextByPositions({4}), {"MS.1"}),
    #"Renamed Columns" = Table.RenameColumns(#"Split Column by Positions",{{"MS.1", "MS"}}),
    #"Duplicated Column" = Table.DuplicateColumn(#"Renamed Columns", "Column1.2", "Column1.2 - Copy"),
    #"Split Column by Positions1" = Table.SplitColumn(#"Duplicated Column", "Column1.2 - Copy", Splitter.SplitTextByPositions({7}), {"Column1.2 - Copy.1"}),
    #"Promoted Headers" = Table.PromoteHeaders(#"Split Column by Positions1", [PromoteAllScalars=true]),
    #"Renamed Columns1" = Table.RenameColumns(#"Promoted Headers",{{"", "MS"}}),
    #"Removed Columns" = Table.RemoveColumns(#"Renamed Columns1",{"MDC MS Description"}),
    #"Trimmed Text" = Table.TransformColumns(#"Removed Columns",{{"DRG", Text.Trim, type text}, {"MDC", Text.Trim, type text}, {"MS", Text.Trim, type text}, {"Description", Text.Trim, type text}}),
    #"Duplicated Column1" = Table.DuplicateColumn(#"Trimmed Text", "DRG", "DRG - Copy"),
    #"Changed Type" = Table.TransformColumnTypes(#"Duplicated Column1",{{"DRG - Copy", Int64.Type}}),
    #"Renamed Columns2" = Table.RenameColumns(#"Changed Type",{{"DRG - Copy", "DRG Key"}}),
    #"Added Custom2" = Table.AddColumn(#"Renamed Columns2", "DRG Description", each [DRG] & " " & [Description]),
    #"Reordered Columns" = Table.ReorderColumns(#"Added Custom2",{"DRG", "Description", "DRG Description", "MDC", "MS", "DRG Key"}),
    #"Duplicated Column2" = Table.DuplicateColumn(#"Reordered Columns", "MDC", "MDC - Copy"),
    #"Renamed Columns3" = Table.RenameColumns(#"Duplicated Column2",{{"MDC - Copy", "MDC Key"}}),
    #"Changed Type1" = Table.TransformColumnTypes(#"Renamed Columns3",{{"MDC Key", Int64.Type}}),
    #"Merged Queries" = Table.NestedJoin(#"Changed Type1", {"DRG Key"}, #"DRG to Surgical Class ETL", {"DRG Key"}, "DRG to Surgical Class ETL", JoinKind.LeftOuter),
    #"Expanded DRG to Surgical Class ETL" = Table.ExpandTableColumn(#"Merged Queries", "DRG to Surgical Class ETL", {"MDC Surgical FK"}, {"MDC Surgical FK"}),
    #"Merged Queries1" = Table.NestedJoin(#"Expanded DRG to Surgical Class ETL", {"MDC Surgical FK"}, #"MDC & Surgical Class Hierarchy", {"Primary Key"}, "MDC & Surgical Class Hierarchy", JoinKind.LeftOuter),
    #"Expanded MDC & Surgical Class Hierarchy" = Table.ExpandTableColumn(#"Merged Queries1", "MDC & Surgical Class Hierarchy", {"Primary Key", "Surgical Class DRG Range", "Surgical Class Description", "Surgical Class", "MDC", "MDC Description", "DRG Start", "DRG End", "MDC Key"}, {"Primary Key", "Surgical Class DRG Range", "Surgical Class Description", "Surgical Class", "MDC.1", "MDC Description", "DRG Start", "DRG End", "MDC Key.1"}),
    #"Removed Columns1" = Table.RemoveColumns(#"Expanded MDC & Surgical Class Hierarchy",{"MDC", "MDC Key", "Primary Key", "DRG Start", "DRG End"}),
    #"Renamed Columns4" = Table.RenameColumns(#"Removed Columns1",{{"MDC Key.1", "MDC Key"}, {"MDC.1", "MDC"}})
in
    #"Renamed Columns4"
